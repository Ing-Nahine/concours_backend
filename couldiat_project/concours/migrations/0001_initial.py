# Generated by Django 5.2.7 on 2025-10-20 20:41

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Concours',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=200, verbose_name='nom du concours')),
                ('type', models.CharField(choices=[('Direct', 'Concours Direct'), ('Professionnel', 'Concours Professionnel')], max_length=20, verbose_name='type')),
                ('description', models.TextField(verbose_name='description')),
                ('date_inscription', models.DateField(help_text="Date limite pour s'inscrire au concours", verbose_name="date limite d'inscription")),
                ('date_concours', models.DateField(help_text='Date à laquelle se déroulera le concours', verbose_name='date du concours')),
                ('lieu', models.CharField(max_length=200, verbose_name='lieu')),
                ('frais_inscription', models.IntegerField(help_text='Montant en FCFA', verbose_name="frais d'inscription")),
                ('places_disponibles', models.IntegerField(verbose_name='places disponibles')),
                ('conditions', models.JSONField(default=list, help_text="Liste des conditions d'inscription (array de strings)", verbose_name='conditions')),
                ('est_ouvert', models.BooleanField(default=True, verbose_name='est ouvert')),
                ('image', models.ImageField(blank=True, null=True, upload_to='concours/', verbose_name='image')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='date de modification')),
            ],
            options={
                'verbose_name': 'concours',
                'verbose_name_plural': 'concours',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Inscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100, verbose_name='nom')),
                ('prenom', models.CharField(max_length=100, verbose_name='prénom')),
                ('date_naissance', models.DateField(verbose_name='date de naissance')),
                ('ville', models.CharField(max_length=100, verbose_name='ville')),
                ('sexe', models.CharField(choices=[('M', 'Masculin'), ('F', 'Féminin')], max_length=1, verbose_name='sexe')),
                ('cni', models.FileField(help_text='Document CNI (PDF ou image)', upload_to='inscriptions/cni/', verbose_name='CNI')),
                ('photo', models.ImageField(upload_to='inscriptions/photos/', verbose_name="photo d'identité")),
                ('telephone', models.CharField(max_length=20, verbose_name='téléphone')),
                ('statut', models.CharField(choices=[('en_attente', 'En attente de validation'), ('confirmee', 'Confirmée'), ('annulee', 'Annulée/Rejetée')], default='en_attente', max_length=20, verbose_name='statut')),
                ('numero_inscription', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name="numéro d'inscription")),
                ('raison_rejet', models.TextField(blank=True, null=True, verbose_name='raison du rejet')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='date de modification')),
                ('concours', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inscriptions', to='concours.concours', verbose_name='concours')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inscriptions', to=settings.AUTH_USER_MODEL, verbose_name='utilisateur')),
            ],
            options={
                'verbose_name': 'inscription',
                'verbose_name_plural': 'inscriptions',
                'ordering': ['-created_at'],
                'unique_together': {('user', 'concours')},
            },
        ),
        migrations.CreateModel(
            name='Paiement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('methode_paiement', models.CharField(choices=[('orange_money', 'Orange Money'), ('moov_money', 'Moov Money')], max_length=20, verbose_name='méthode de paiement')),
                ('reference_transaction', models.CharField(max_length=100, verbose_name='référence transaction')),
                ('montant', models.IntegerField(help_text='Montant en FCFA', verbose_name='montant')),
                ('capture_ecran', models.ImageField(help_text='Preuve de paiement', upload_to='paiements/preuves/', verbose_name="capture d'écran")),
                ('statut', models.CharField(choices=[('en_attente', 'En attente de validation'), ('valide', 'Validé'), ('rejete', 'Rejeté')], default='en_attente', max_length=20, verbose_name='statut')),
                ('raison_rejet', models.TextField(blank=True, null=True, verbose_name='raison du rejet')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='date de création')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='date de modification')),
                ('inscription', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='paiement', to='concours.inscription', verbose_name='inscription')),
            ],
            options={
                'verbose_name': 'paiement',
                'verbose_name_plural': 'paiements',
                'ordering': ['-created_at'],
            },
        ),
    ]
